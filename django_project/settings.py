"""
Django settings for django_project project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from google.oauth2 import service_account

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'UBwFks_28M0xsU-G1dMZufcw7vVNACa4FGTKDaxZ2oXE4w34YkacCZoWB794fxb4YRw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', '192.168.18.192']


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django.contrib.sites",
    # Third-party
    "crispy_forms",
    "crispy_bootstrap5",
    "allauth",
    "allauth.account",
    'allauth.socialaccount',  # Social account management
    'allauth.socialaccount.providers.google',  # Google provider
    "storages",
    # Local
    "accounts.apps.AccountsConfig",
    "pages.apps.PagesConfig",
    "incident_report.apps.IncidentReportConfig",
    "service_request.apps.ServiceRequestConfig",
    "dashboard.apps.DashboardConfig"
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'django_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'baznasitsmdatabase',      
        'USER': 'baznasitsmdatabaseadmin',         
        'PASSWORD': 'testpass123',
        'HOST': 'localhost',
        'PORT': '5432', 
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Jakarta'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / "static"]  
STATIC_ROOT = BASE_DIR / "staticfiles"  
STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"  

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "accounts.CustomUser"



# django-crispy-forms
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"  
CRISPY_TEMPLATE_PACK = "bootstrap5"  

# django-allauth config
LOGIN_REDIRECT_URL = "home"
ACCOUNT_LOGOUT_REDIRECT = "home"  
SITE_ID = 2
AUTHENTICATION_BACKENDS = (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
)
# Email settings for Gmail SMTP
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "najocode@gmail.com"
EMAIL_HOST_PASSWORD = "bgoe rpha ykpp cpgr" 
DEFAULT_FROM_EMAIL = "najocode@gmail.com"
 
ACCOUNT_SESSION_REMEMBER = True  
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False  
ACCOUNT_USERNAME_REQUIRED = False  
ACCOUNT_AUTHENTICATION_METHOD = "email"  
ACCOUNT_EMAIL_REQUIRED = True  
ACCOUNT_UNIQUE_EMAIL = True 

# google login
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': ['profile', 'email'],
        'AUTH_PARAMS': {'access_type': 'online'},
        'OAUTH_PKCE_ENABLED': True,  # Enable PKCE for better security
    }
}

SOCIALACCOUNT_ADAPTER = "accounts.adapters.CustomSocialAccountAdapter"

ACCOUNT_ADMIN_LOGIN_REDIRECT_URL = "/admin/"


# Google Cloud Storage settings
# GS_BUCKET_NAME = 'baznasitsmbucket1'  # Replace with your actual bucket name
# GS_CREDENTIALS = service_account.Credentials.from_service_account_file(
#     os.path.join(BASE_DIR, r"C:\Users\raiha\OneDrive\Desktop\ITSM BAZNAS\bzn-sandbox-msib-015f011c890d.json")
# )

# DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
# GS_DEFAULT_ACL = 'publicRead'
# MEDIA_URL = f'https://storage.googleapis.com/{GS_BUCKET_NAME}/'

# jazzmin
JAZZMIN_SETTINGS = {
    "site_title": "BAZNAS ITSM Admin",
    "site_header": "BAZNAS ITSM",
    "site_brand": "BAZNAS ITSM",
    "site_logo": r"C:\Users\raiha\OneDrive\Desktop\ITSM BAZNAS\static\images\logo_baznas.png",
    "welcome_sign": "Welcome to the BAZNAS ITSM Admin Dashboard",
    "copyright": "BAZNAS",
    "hide_admin_version": True,
    "show_sidebar": True,
    "navigation_expanded": True,
    "custom_css": r"C:\Users\raiha\OneDrive\Desktop\ITSM BAZNAS\static\css\customadmin.css",
    "show_ui_builder": False,


    "topmenu_links": [
        # {"name": "Dashboard", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"name": "Incident Reports", "url": "admin:incident_report_incidentreport_changelist"},
        {"name": "Service Requests", "url": "admin:service_request_servicerequest_changelist"},
    ],
    
    "usermenu_links": [
        {"model": "auth.user"},
    
    ],
    
    
    "icons": {
        "auth": "fas fa-user",               
        "auth.User": "fas fa-user",              
        "auth.Group": "fas fa-users",                
        "accounts.CustomUser": "fas fa-user",            
        "account.EmailAddress": "fas fa-envelope", 
        "sites": "fas fa-globe",                     
        "sites.Site": "fas fa-globe", 
        
        "incident_report.IncidentReport": "fas fa-solid fa-ticket",
        "incident_report.Category": "fas fa-layer-group",
        "incident_report.SubCategory": "fas fa-solid fa-list",
        "incident_report.Issue": "fas fa-exclamation-triangle",
        "incident_report.AffectedDevice": "fas fa-desktop",
        "incident_report.Building": "fas fa-building",
        "incident_report.Floor": "fas fa-th-large",
        
        "service_request.ServiceRequest": "fas fa-solid fa-ticket",
        "service_request.Category": "fas fa-layer-group",
        "service_request.Asset": "fas fa-box",
        "service_request.AssetForm": "fas fa-clipboard-list",
        
        "Dashboard.TicketSummary": "fa-solid fa-newspaper",
        
        
    },
    
    "titles": {
        "service_request.Asset": "Service Item",
        "service_request.AssetForm": "Service Item Form",
    },
    
    "order_with_respect_to": [
        "Dashboard",
        "Dashboard.TicketSummary",
        
        "Incident_Report",  
        "Incident_Report.IncidentReport",
        "Incident_Report.Category",
        "Incident_Report.SubCategory",
        "Incident_Report.Issue",
        "Incident_Report.AffectedDevice",
        "Incident_Report.Building",
        "Incident_Report.Floor",
        
        "Service_Request",
        "Service_Request.ServiceRequest",
        "Service_Request.Category",
        "Service_Request.Asset",
        "Service_Request.AssetForm",
        
    ],

}

JAZZMIN_UI_TWEAKS = {
    "theme": "cerulean",
}